<!-- <%- include("partials/header") -%> -->


<!DOCTYPE html>
<html>
  <head>
    <title>Directions Service</title>

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<style>
    /**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
/* 
 * Always set the map height explicitly to define the size of the div element
 * that contains the map. 
 */
#map {
  height: 100%;
}

/* 
 * Optional: Makes the sample page fill the window. 
 */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}




</style>
    <!-- <link rel="stylesheet" type="text/css" href="./style.css" /> -->
    <!-- <script type="module" src="./index.ts"></script> -->
  </head>

  <body>
    <body data-sidebar="dark">

        <!-- <body data-layout="horizontal" data-topbar="colored"> -->
    
    
    
            <!-- ============================================================== -->
            <!-- Start right Content here -->
            <!-- ============================================================== -->
            <div class="">
                <div class="page-content">
                    <div class="container-fluid">
    
                        <!-- start page title -->
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="page-title-box">
                                    <h4>Driver dashboard</h4>
                                    <ol class="breadcrumb m-0">
                                        <li class="breadcrumb-item"><a href="javascript: void(0);">Current Task</a></li>
                                    </ol>
                                </div>
                            </div>
                            <!-- <div class="col-sm-6">
                                <div class="state-information d-none d-sm-block">
                                    <div class="state-graph">
                                        <div id="header-chart-1" data-colors='["--bs-primary"]'></div>
                                        <div class="info">Balance $ 2,317</div>
                                    </div>
                                    <div class="state-graph">
                                        <div id="header-chart-2" data-colors='["--bs-info"]'></div>
                                        <div class="info">Item Sold 1230</div>
                                    </div>
                                </div>
                            </div> -->
                        </div>
    
                    </div>
                </div>
                <div class="col-lg-12">

<div>
    <div class="col-lg-10 m-5">
    
 <div class="row">
  <p id="crd"> <%= empCords %>  </p>
  <div class="col-lg-6">
    <div class="col-lg-10"><h6>Drop:  </h6> <span id="drop"><%= currentTask.drop %></span></div>
    <!-- <div class="col-lg-10"><h6 >Pick up: </h6> <span id="pick"><%= currentTask.pickup %></span></div>  -->
    <h6 >Distance:</h6> <span id="total"></span> 
    
    <form role="form" action="/start" method="post">
      <input style="display: none;" type="text" name="tripStatus" value="On-going" >
      <input type="text" name="tripId" style="display: none;" value=" <%= currentTask.id %> " >
      <input style="display: none;" type="text" id="distance" name="distance"  >
      <h6 id="socketID">  </h6>  
      <button type="submit" class="btn btn-success">Start</button>
    </form>
    <a type="button" class="btn btn-primary" target="_blank" href="https://www.google.com/maps/dir/Current+Location/<%= currentTask.drop %>"   >Open on google maps</a>
  


  <form role="form" action="/end" method="post">
    <input style="display: none;" type="text" name="tripStatus" value="On-going" >
    <input type="text" name="tripId" style="display: none;" value=" <%= currentTask.id %> " >
    <input type="text" id="pickUpCrd" style="display: none;" value=" <%= currentTask.pickUpLatLng %> " >
    <input type="text" id="dropCrd" style="display: none;" value=" <%= currentTask.dropLatLng %> " >
    <h6 id="socketID">  </h6>  
    <button type="submit" class="btn btn-danger">End</button>
  </form>
</div>
  <div  class="col-lg-6 ">
    <div id="map"></div>
  </div>
</div>

<div class="row">
  <div id="directions-panel" class="col-lg-10">
    
  </div>
</div>

       
    </div>

  </div>   


                </div>
            </div>
    
    

    
<script>
//      const og = [];


// navigator.geolocation.getCurrentPosition(
//    (position) => {
//      const pos = {
//        lat: position.coords.latitude,
//        lng: position.coords.longitude,
//      };
//      vvv = pos.lat + "," + pos.lng;
//      og.push(vvv);
//      console.log(vvv);
//      console.log("[][][][][][]");
 
//      console.log( pos.lat);
//      console.log(pos.lng  );
    
//    },

//  );

</script>
 
  

    <script>


const bob= [];

navigator.geolocation.getCurrentPosition(
   (position) => {
     const pos = {
       lat: position.coords.latitude,
       lng: position.coords.longitude,
     };
     vvv =  {
    "location":  pos.lat + "," + pos.lng,
    "stopover": true
  }
  bob.push(vvv);
     console.log(codsArr);
     console.log("[][][][][][]");
 
     console.log( pos.lat);
     console.log(pos.lng  );
    
   },

 );

  console.log( bob);
  console.log("188");





      const empCords = document.getElementById("crd").innerHTML.trim(); 
      const objects = empCords.split(',');
console.log(">>>>>><<<<<<<<<");
  
const yy = objects;
console.log(yy);

const vtu = [];
      

for (let i = 0; i < (yy.length); i++) {
  const cvvc = {
    "latitude": yy[i]  ,
    "longitude": yy[i+1]
  }
  vtu.push(cvvc);
  i = i+1;
}





const array = [];




for (const object of objects) {
  const jsonObject = JSON.parse(object);
  array.push(jsonObject);
}

vtu.sort((a, b) => a.latitude - b.latitude);
console.log(vtu);
console.log(231);




const codsArr = [];








for (let i = 0; i < (vtu.length); i++) {
console.log(  vtu[i]);

  const cvvc = {
    "location": vtu[i].latitude + "," + vtu[i].longitude,
    "stopover": true
  }
  codsArr.push(cvvc);
 
}
console.log(codsArr);
console.log("209");
// console.log( codsArr[codsArr.length-1].location);

function wait(ms){
    var start = new Date().getTime();
    var end = start;
    while(end < start + ms) {
      end = new Date().getTime();
   }
 }
   let map, infoWindow;


</script>   


    <script>


console.log( document.getElementById("dropCrd").value);
console.log("244");

   window.onload =  function(){

    console.log("Init map")



    // Try HTML5 geolocation.
     

      const liveCordinates= [];

 
      setInterval(() => {
        navigator.geolocation.getCurrentPosition(
        (position) => {
          const pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };

          // console.log( pos.lat);
          //   console.log(pos.lng  );
            liveCordinates.push(pos);
            console.log(liveCordinates);
         
            socket.emit("gg", {lat: pos.lat, lng: pos.lng},liveCordinates)
        },
 
      );
      }, 2000);
    
};





//   ROAD MAP

function name() {
   const z = currentTask.dropCrd;
alert(z);
console.log(z + "5"); 
}

name();
  

function initMap() {
 

  const map = new google.maps.Map(document.getElementById("map"), {
    zoom: 6,
    center: { lat: 12.874717 , lng: 77.595263},
  });
  
  const directionsService = new google.maps.DirectionsService();
  const directionsRenderer = new google.maps.DirectionsRenderer({
    draggable: true,
    map,
    panel: document.getElementById("panel"),
  });

  directionsRenderer.addListener("directions_changed", () => {
    const directions = directionsRenderer.getDirections();

    if (directions) {
      computeTotalDistance(directions);
    }
  });




  directionsRenderer.setMap(map);
 calculateAndDisplayRoute(directionsService, directionsRenderer);


}





function calculateAndDisplayRoute(directionsService, directionsRenderer) {

  console.log( bob);


  setTimeout(() => {
// const vgb = {
//   "location":  document.getElementById("dropCrd").value,
//   "stopover": true
// }
// codsArr.unshift(vgb);
 console.log( codsArr);
 console.log("321");
    directionsService
    .route({
      optimizeWaypoints: true,
      origin: bob[0].location, //"12.882663, 77.643638",  // codsArr[0].location , // document.getElementById("pickUpCrd").value,
      destination:  document.getElementById("dropCrd").value,
      
      travelMode: google.maps.TravelMode.DRIVING,
     
      waypoints:codsArr,
      //  [
      //   {"location":"12.8898017,77.6397277","stopover":true},
      //   {"location":"12.977445,77.5722554","stopover":true},
      //   {"location":"13.049016,77.5935633","stopover":true},
      //   {"location":"15.435329, 77.094781","stopover":true} 
      //  ], 
     
   
    })    .then((response) => {
          // Get the order of optimized waypoints
    // const optimizedWaypointIndices = response.routes[0].waypoint_order;
    // console.log("Optimized Waypoint Indices:", optimizedWaypointIndices);
      
      directionsRenderer.setDirections(response);
console.log(response);
console.log("RESP");
      const route = response.routes[0];
      const summaryPanel = document.getElementById("directions-panel");

      summaryPanel.innerHTML = "";

      // For each route, display summary information.
      for (let i = 0; i < route.legs.length; i++) {
        const routeSegment = i + 1;

        summaryPanel.innerHTML +=
          "<b>Route Segment: " + routeSegment + "</b><br>";
        summaryPanel.innerHTML += route.legs[i].start_address + " to ";
        summaryPanel.innerHTML += route.legs[i].end_address + "<br>";
        summaryPanel.innerHTML += route.legs[i].distance.text + "<br><br>";
      }
    })
    .catch((e) => window.alert("Directions request failed due to " + e));

   }, 3000);



}


function computeTotalDistance(result) {
  let total = 0;
  const myroute = result.routes[0];

  if (!myroute) {
    return;
  }

  for (let i = 0; i < myroute.legs.length; i++) {
    total += myroute.legs[i].distance.value;
  }

  total = total / 1000;
  document.getElementById("total").innerHTML = total + " km";
  document.getElementById("distance").value = total ;
}

// window.initMap = initMap;

  
document.getElementById("socketID").innerHTML = socket.id;


    </script>
    <script src="/socket.io/socket.io.js"></script>

<script>
      var socket = io();
      socket.emit('connection', function(){
         console.log(JSON.stringify(socket.io.engine.id) + "//??//");
var id = socket.io.engine.id;
alert(id);
})
   
</script>

<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDSX3jhBJVmlod62B-joxdetnWt-_yBnLM&callback=initMap&v=weekly" 
async>
</script>

    </body>
<%- include("partials/footer") -%>



